/* 
 * Robot Rally Game logic engine
 *
 * This api controlls the flow of a game and provides it's data. It is desiged to be RESTfull so the structure works simmilar as file system. The service will run and only work in a local network, `game.host` is the IP of the Computer hosting the game and will be found via a IP scan
 *
 * The version of the OpenAPI document: 0.1.0
 * Contact: nbrugger@student.tgm.ac.at
 * Generated by: https://github.com/openapitools/openapi-generator.git
 */

using System;
using Tgm.Roborally.Api.Api;
using Xunit;

namespace Tgm.Roborally.Api.Test.Api
{
    /// <summary>
    ///  Class for testing DefaultApi
    /// </summary>
    /// <remarks>
    /// This file is automatically generated by OpenAPI Generator (https://openapi-generator.tech).
    /// Please update the test case below to test the API endpoint.
    /// </remarks>
    public class DefaultApiTests : IDisposable
    {
        private DefaultApi instance;

        public DefaultApiTests()
        {
            instance = new DefaultApi();
        }

        public void Dispose()
        {
            // Cleanup when everything is done.
        }

        /// <summary>
        /// Test an instance of DefaultApi
        /// </summary>
        [Fact]
        public void InstanceTest()
        {
            // TODO uncomment below to test 'IsInstanceOfType' DefaultApi
            //Assert.IsType(typeof(DefaultApi), instance, "instance is a DefaultApi");
        }

        
        /// <summary>
        /// Test ChooseRobot
        /// </summary>
        [Fact]
        public void ChooseRobotTest()
        {
            // TODO uncomment below to test the method and replace null with proper value
            //int gameId = null;
            //int playerId = null;
            //List<Robots> robots = null;
            //instance.ChooseRobot(gameId, playerId, robots);
            
        }
        
        /// <summary>
        /// Test GetRobotStats
        /// </summary>
        [Fact]
        public void GetRobotStatsTest()
        {
            // TODO uncomment below to test the method and replace null with proper value
            //int gameId = null;
            //string robotId = null;
            //var response = instance.GetRobotStats(gameId, robotId);
            //Assert.IsType<RobotInfo> (response, "response is RobotInfo");
        }
        
    }

}
