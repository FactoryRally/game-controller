/*
 * Robot Rally Game logic engine
 *
 * This api controlls the flow of a game and provides it's data. It is desiged to be RESTfull so the structure works simmilar as file system. The service will run and only work in a local network, `game.host` is the IP of the Computer hosting the game and will be found via a IP scan
 *
 * The version of the OpenAPI document: 0.1.0
 * Contact: nbrugger@student.tgm.ac.at
 * Generated by: https://openapi-generator.tech
 */

using System;
using System.Linq;
using System.Text;
using System.Collections.Generic;
using System.ComponentModel;
using System.ComponentModel.DataAnnotations;
using System.Runtime.Serialization;
using Newtonsoft.Json;
using Tgm.Roborally.Server.Converters;

namespace Tgm.Roborally.Server.Models
{ 
        /// <summary>
        /// The type defines the function of a tile and how it is displayed. The behaviour is unknown to the client
        /// </summary>
        /// <value>The type defines the function of a tile and how it is displayed. The behaviour is unknown to the client</value>
        [TypeConverter(typeof(CustomEnumConverter<TileType>))]
        [JsonConverter(typeof(Newtonsoft.Json.Converters.StringEnumConverter))]
        public enum TileType
        {
            
            /// <summary>
            /// Enum NormalEnum for normal
            /// </summary>
            [EnumMember(Value = "normal")]
            NormalEnum = 1,
            
            /// <summary>
            /// Enum RotatorEnum for rotator
            /// </summary>
            [EnumMember(Value = "rotator")]
            RotatorEnum = 2,
            
            /// <summary>
            /// Enum WallEnum for wall
            /// </summary>
            [EnumMember(Value = "wall")]
            WallEnum = 3,
            
            /// <summary>
            /// Enum PrioCoreEnum for prio_core
            /// </summary>
            [EnumMember(Value = "prio_core")]
            PrioCoreEnum = 4,
            
            /// <summary>
            /// Enum ConveyorEnum for conveyor
            /// </summary>
            [EnumMember(Value = "conveyor")]
            ConveyorEnum = 5,
            
            /// <summary>
            /// Enum TrapDoorEnum for trap-door
            /// </summary>
            [EnumMember(Value = "trap-door")]
            TrapDoorEnum = 6,
            
            /// <summary>
            /// Enum StomperEnum for stomper
            /// </summary>
            [EnumMember(Value = "stomper")]
            StomperEnum = 7,
            
            /// <summary>
            /// Enum RadioactiveEnum for radioactive
            /// </summary>
            [EnumMember(Value = "radioactive")]
            RadioactiveEnum = 8,
            
            /// <summary>
            /// Enum RepairSiteEnum for repair site
            /// </summary>
            [EnumMember(Value = "repair site")]
            RepairSiteEnum = 9,
            
            /// <summary>
            /// Enum ButtonEnum for Button
            /// </summary>
            [EnumMember(Value = "Button")]
            ButtonEnum = 10,
            
            /// <summary>
            /// Enum WallEnum for Wall
            /// </summary>
            [EnumMember(Value = "Wall")]
            WallEnum = 11,
            
            /// <summary>
            /// Enum OneWayWallEnum for One Way Wall
            /// </summary>
            [EnumMember(Value = "One Way Wall")]
            OneWayWallEnum = 12,
            
            /// <summary>
            /// Enum PuddleEnum for Puddle
            /// </summary>
            [EnumMember(Value = "Puddle")]
            PuddleEnum = 13,
            
            /// <summary>
            /// Enum PitEnum for pit
            /// </summary>
            [EnumMember(Value = "pit")]
            PitEnum = 14,
            
            /// <summary>
            /// Enum RampEnum for Ramp
            /// </summary>
            [EnumMember(Value = "Ramp")]
            RampEnum = 15
        }
}
