/*
 * Robot Rally Game logic engine
 *
 * This api controlls the flow of a game and provides it's data. It is desiged to be RESTfull so the structure works simmilar as file system. The service will run and only work in a local network, `game.host` is the IP of the Computer hosting the game and will be found via a IP scan
 *
 * The version of the OpenAPI document: 0.1.0
 * Contact: nbrugger@student.tgm.ac.at
 * Generated by: https://openapi-generator.tech
 */

using System;
using System.Linq;
using System.Text;
using System.Collections.Generic;
using System.ComponentModel;
using System.ComponentModel.DataAnnotations;
using System.Runtime.Serialization;
using Newtonsoft.Json;
using Tgm.Roborally.Server.Converters;

namespace Tgm.Roborally.Server.Models
{ 
        /// <summary>
        /// Defines the action itsselft (what the action is doing)
        /// </summary>
        /// <value>Defines the action itsselft (what the action is doing)</value>
        [TypeConverter(typeof(CustomEnumConverter<EntityActionType>))]
        [JsonConverter(typeof(Newtonsoft.Json.Converters.StringEnumConverter))]
        public enum EntityActionType
        {
            
            /// <summary>
            /// Enum RebootEnum for reboot
            /// </summary>
            [EnumMember(Value = "reboot")]
            RebootEnum = 1,
            
            /// <summary>
            /// Enum UseUpgradeEnum for use upgrade
            /// </summary>
            [EnumMember(Value = "use upgrade")]
            UseUpgradeEnum = 2,
            
            /// <summary>
            /// Enum SpiderJumpEnum for spider_jump
            /// </summary>
            [EnumMember(Value = "spider_jump")]
            SpiderJumpEnum = 3,
            
            /// <summary>
            /// Enum CacheEnum for Cache
            /// </summary>
            [EnumMember(Value = "Cache")]
            CacheEnum = 4,
            
            /// <summary>
            /// Enum RegisterRefreshEnum for register-refresh
            /// </summary>
            [EnumMember(Value = "register-refresh")]
            RegisterRefreshEnum = 5,
            
            /// <summary>
            /// Enum StorageSwapEnum for storage-swap
            /// </summary>
            [EnumMember(Value = "storage-swap")]
            StorageSwapEnum = 6,
            
            /// <summary>
            /// Enum JumperEnum for jumper
            /// </summary>
            [EnumMember(Value = "jumper")]
            JumperEnum = 7,
            
            /// <summary>
            /// Enum TeleporterEnum for teleporter
            /// </summary>
            [EnumMember(Value = "teleporter")]
            TeleporterEnum = 8,
            
            /// <summary>
            /// Enum MagnetRayEnum for magnet-ray
            /// </summary>
            [EnumMember(Value = "magnet-ray")]
            MagnetRayEnum = 9,
            
            /// <summary>
            /// Enum PushrayEnum for pushray
            /// </summary>
            [EnumMember(Value = "pushray")]
            PushrayEnum = 10,
            
            /// <summary>
            /// Enum RotationEnum for rotation
            /// </summary>
            [EnumMember(Value = "rotation")]
            RotationEnum = 11,
            
            /// <summary>
            /// Enum SidekickEnum for sidekick
            /// </summary>
            [EnumMember(Value = "sidekick")]
            SidekickEnum = 12
        }
}
