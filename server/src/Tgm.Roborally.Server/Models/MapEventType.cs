/*
 * Robot Rally Game logic engine
 *
 * This api controlls the flow of a game and provides it's data. It is desiged to be RESTfull so the structure works simmilar as file system. The service will run and only work in a local network, `game.host` is the IP of the Computer hosting the game and will be found via a IP scan
 *
 * The version of the OpenAPI document: 0.1.0
 * Contact: nbrugger@student.tgm.ac.at
 * Generated by: https://openapi-generator.tech
 */

using System;
using System.Linq;
using System.Text;
using System.Collections.Generic;
using System.ComponentModel;
using System.ComponentModel.DataAnnotations;
using System.Runtime.Serialization;
using Newtonsoft.Json;
using Tgm.Roborally.Server.Converters;

namespace Tgm.Roborally.Server.Models
{ 
        /// <summary>
        /// The event that occurs if the active map elements are activated
        /// </summary>
        /// <value>The event that occurs if the active map elements are activated</value>
        [TypeConverter(typeof(CustomEnumConverter<MapEventType>))]
        [JsonConverter(typeof(Newtonsoft.Json.Converters.StringEnumConverter))]
        public enum MapEventType
        {
            
            /// <summary>
            /// Enum Lazer for lazer
            /// </summary>
            [EnumMember(Value = "lazer")]
            Lazer = 1,
            
            /// <summary>
            /// Enum Rotator for rotator
            /// </summary>
            [EnumMember(Value = "rotator")]
            Rotator = 2,
            
            /// <summary>
            /// Enum ConveyorBelts for conveyor-belts
            /// </summary>
            [EnumMember(Value = "conveyor-belts")]
            ConveyorBelts = 3,
            
            /// <summary>
            /// Enum Stomper for stomper
            /// </summary>
            [EnumMember(Value = "stomper")]
            Stomper = 4,
            
            /// <summary>
            /// Enum Hole for hole
            /// </summary>
            [EnumMember(Value = "hole")]
            Hole = 5,
            
            /// <summary>
            /// Enum HoleTrap for hole-trap
            /// </summary>
            [EnumMember(Value = "hole-trap")]
            HoleTrap = 6,
            
            /// <summary>
            /// Enum Pusher for pusher
            /// </summary>
            [EnumMember(Value = "pusher")]
            Pusher = 7,
            
            /// <summary>
            /// Enum Flamethrower for flamethrower
            /// </summary>
            [EnumMember(Value = "flamethrower")]
            Flamethrower = 8,
            
            /// <summary>
            /// Enum Portal for portal
            /// </summary>
            [EnumMember(Value = "portal")]
            Portal = 9,
            
            /// <summary>
            /// Enum ToggleRamps for toggle-ramps
            /// </summary>
            [EnumMember(Value = "toggle-ramps")]
            ToggleRamps = 10,
            
            /// <summary>
            /// Enum Repair for repair
            /// </summary>
            [EnumMember(Value = "repair")]
            Repair = 11
        }
}
